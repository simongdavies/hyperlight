name: Create and publish devcontainer Docker image

on:
  push:
    branches:
      - "main"
    paths:
      - ".devcontainer/Dockerfile"
      - ".github/workflows/CreateDevcontainerImage.yml"
      - "rust-toolchain.toml"

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-devcontainer
  USER: vscode
  GROUP: vscode
  LLVM_VERSION: 17
  RUST_TOOLCHAIN_DEFAULT: 1.84.0
  RUST_TOOLCHAIN_FILE: rust-toolchain.toml

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read Rust toolchain version from ${{ env.RUST_TOOLCHAIN_FILE }}
        id: toolchain
        run: |
          version=$(cat ${{ env.RUST_TOOLCHAIN_FILE }} | sed -n '/\[toolchain\]/,/^\[/{/^\s*channel = /s/[^"]*"\([^"]*\)".*/\1/p}')
          cat ${{ env.RUST_TOOLCHAIN_FILE }} | grep $version &> /dev/null \
            && echo "RUST_TOOLCHAIN=${version}" >> "$GITHUB_OUTPUT" \
            || echo "RUST_TOOLCHAIN=${{ env.RUST_TOOLCHAIN_FILE }}" >> "$GITHUB_OUTPUT"
        
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./.devcontainer
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            USER=${{ env.USER }}
            GROUP=${{ env.GROUP }}
            LLVM_VERSION=${{ env.LLVM_VERSION }}
            RUST_TOOLCHAIN=${{ steps.toolchain.outputs.RUST_TOOLCHAIN }}
