[package]
name = "hyperlight-mesh"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
readme.workspace = true
description = """
Support for running hyperlight using mesh from openvmm, this enables the isolation of sandboxes and optionally host functions in their own processes.
"""

[lints]
workspace = true

[dependencies]
anyhow = "1.0"
mesh ={ git = "https://github.com/simongdavies/openvmm", branch = "fix-mesh-segv" }
mesh_process ={ git = "https://github.com/simongdavies/openvmm", branch = "fix-mesh-segv" }
mesh_worker = { git = "https://github.com/simongdavies/openvmm", branch = "fix-mesh-segv" }
mesh_channel = { git = "https://github.com/simongdavies/openvmm", branch = "fix-mesh-segv" }
mesh_protobuf =  { git = "https://github.com/simongdavies/openvmm", branch = "fix-mesh-segv" }
futures = { version = "0.3" }
pal_async= { git = "https://github.com/simongdavies/openvmm", branch = "fix-mesh-segv" }
futures-concurrency = { version = "7.2" }
uuid = { version = "1.13", features = ["v4"] }
tokio = { version = "1.43", features = ["full"] }
hyperlight-common = { workspace = true, features = ["mesh"] }
hyperlight-error = { workspace = true }
hyperlight-host = { workspace = true,  default-features = true, features = ["mesh"] }
once_cell = "1.20"
libc = { version = "0.2.169" }

[target.'cfg(unix)'.dependencies]
seccompiler = { version = "0.4.0", optional = true }


[dev-dependencies]
hyperlight-testing = { workspace = true }
clap = "4.5"
criterion = "0.5.1"

[features]
default = []
seccomp=["dep:seccompiler"]

[[bench]]
name = "benchmarks"
harness = false
